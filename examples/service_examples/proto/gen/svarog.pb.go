// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.20.3
// source: svarog.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SessionConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId          string   `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`       // When creating session, set to ""
	SessionType        string   `protobuf:"bytes,2,opt,name=session_type,json=sessionType,proto3" json:"session_type,omitempty"` // one of "keygen", "sign", "reshare"
	KeyQuorum          uint64   `protobuf:"varint,3,opt,name=key_quorum,json=keyQuorum,proto3" json:"key_quorum,omitempty"`
	ReshareKeyQuorum   uint64   `protobuf:"varint,4,opt,name=reshare_key_quorum,json=reshareKeyQuorum,proto3" json:"reshare_key_quorum,omitempty"`
	Groups             []*Group `protobuf:"bytes,5,rep,name=groups,proto3" json:"groups,omitempty"`
	ExpireBeforeFinish int64    `protobuf:"varint,6,opt,name=expire_before_finish,json=expireBeforeFinish,proto3" json:"expire_before_finish,omitempty"` // When creating session, set to 0
	ExpireAfterFinish  int64    `protobuf:"varint,7,opt,name=expire_after_finish,json=expireAfterFinish,proto3" json:"expire_after_finish,omitempty"`    // When creating session, set to 0
	ToSign             *ToSign  `protobuf:"bytes,17,opt,name=to_sign,json=toSign,proto3" json:"to_sign,omitempty"`                                       // [] means unset
}

func (x *SessionConfig) Reset() {
	*x = SessionConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svarog_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionConfig) ProtoMessage() {}

func (x *SessionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_svarog_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionConfig.ProtoReflect.Descriptor instead.
func (*SessionConfig) Descriptor() ([]byte, []int) {
	return file_svarog_proto_rawDescGZIP(), []int{0}
}

func (x *SessionConfig) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *SessionConfig) GetSessionType() string {
	if x != nil {
		return x.SessionType
	}
	return ""
}

func (x *SessionConfig) GetKeyQuorum() uint64 {
	if x != nil {
		return x.KeyQuorum
	}
	return 0
}

func (x *SessionConfig) GetReshareKeyQuorum() uint64 {
	if x != nil {
		return x.ReshareKeyQuorum
	}
	return 0
}

func (x *SessionConfig) GetGroups() []*Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *SessionConfig) GetExpireBeforeFinish() int64 {
	if x != nil {
		return x.ExpireBeforeFinish
	}
	return 0
}

func (x *SessionConfig) GetExpireAfterFinish() int64 {
	if x != nil {
		return x.ExpireAfterFinish
	}
	return 0
}

func (x *SessionConfig) GetToSign() *ToSign {
	if x != nil {
		return x.ToSign
	}
	return nil
}

type JoinSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId  string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	MemberName string `protobuf:"bytes,2,opt,name=member_name,json=memberName,proto3" json:"member_name,omitempty"` // Name of MPC participant
	KeyName    string `protobuf:"bytes,3,opt,name=key_name,json=keyName,proto3" json:"key_name,omitempty"`          // Name of root private key
	Token      string `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`                             // Used for authentication
	Mnemonics  string `protobuf:"bytes,5,opt,name=mnemonics,proto3" json:"mnemonics,omitempty"`                     // Only end-user provides this. Leave blank for API calls.
}

func (x *JoinSessionRequest) Reset() {
	*x = JoinSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svarog_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinSessionRequest) ProtoMessage() {}

func (x *JoinSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svarog_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinSessionRequest.ProtoReflect.Descriptor instead.
func (*JoinSessionRequest) Descriptor() ([]byte, []int) {
	return file_svarog_proto_rawDescGZIP(), []int{1}
}

func (x *JoinSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *JoinSessionRequest) GetMemberName() string {
	if x != nil {
		return x.MemberName
	}
	return ""
}

func (x *JoinSessionRequest) GetKeyName() string {
	if x != nil {
		return x.KeyName
	}
	return ""
}

func (x *JoinSessionRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *JoinSessionRequest) GetMnemonics() string {
	if x != nil {
		return x.Mnemonics
	}
	return ""
}

type GetSessionFruitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId  string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	MemberName string `protobuf:"bytes,2,opt,name=member_name,json=memberName,proto3" json:"member_name,omitempty"`
}

func (x *GetSessionFruitRequest) Reset() {
	*x = GetSessionFruitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svarog_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSessionFruitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionFruitRequest) ProtoMessage() {}

func (x *GetSessionFruitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svarog_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionFruitRequest.ProtoReflect.Descriptor instead.
func (*GetSessionFruitRequest) Descriptor() ([]byte, []int) {
	return file_svarog_proto_rawDescGZIP(), []int{2}
}

func (x *GetSessionFruitRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *GetSessionFruitRequest) GetMemberName() string {
	if x != nil {
		return x.MemberName
	}
	return ""
}

type Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupName   string    `protobuf:"bytes,1,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	GroupId     uint64    `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"` // When creating session, set to 0
	GroupQuorum uint64    `protobuf:"varint,3,opt,name=group_quorum,json=groupQuorum,proto3" json:"group_quorum,omitempty"`
	IsReshare   bool      `protobuf:"varint,4,opt,name=is_reshare,json=isReshare,proto3" json:"is_reshare,omitempty"`
	Members     []*Member `protobuf:"bytes,5,rep,name=members,proto3" json:"members,omitempty"`
}

func (x *Group) Reset() {
	*x = Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svarog_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_svarog_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_svarog_proto_rawDescGZIP(), []int{3}
}

func (x *Group) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *Group) GetGroupId() uint64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *Group) GetGroupQuorum() uint64 {
	if x != nil {
		return x.GroupQuorum
	}
	return 0
}

func (x *Group) GetIsReshare() bool {
	if x != nil {
		return x.IsReshare
	}
	return false
}

func (x *Group) GetMembers() []*Member {
	if x != nil {
		return x.Members
	}
	return nil
}

type Member struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberName  string `protobuf:"bytes,1,opt,name=member_name,json=memberName,proto3" json:"member_name,omitempty"`
	MemberId    uint64 `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"` // When creating session, set to 0
	IsAttending bool   `protobuf:"varint,3,opt,name=is_attending,json=isAttending,proto3" json:"is_attending,omitempty"`
}

func (x *Member) Reset() {
	*x = Member{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svarog_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Member) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Member) ProtoMessage() {}

func (x *Member) ProtoReflect() protoreflect.Message {
	mi := &file_svarog_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Member.ProtoReflect.Descriptor instead.
func (*Member) Descriptor() ([]byte, []int) {
	return file_svarog_proto_rawDescGZIP(), []int{4}
}

func (x *Member) GetMemberName() string {
	if x != nil {
		return x.MemberName
	}
	return ""
}

func (x *Member) GetMemberId() uint64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *Member) GetIsAttending() bool {
	if x != nil {
		return x.IsAttending
	}
	return false
}

type Signature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	R          []byte `protobuf:"bytes,1,opt,name=r,proto3" json:"r,omitempty"`
	S          []byte `protobuf:"bytes,2,opt,name=s,proto3" json:"s,omitempty"`
	V          uint32 `protobuf:"varint,3,opt,name=v,proto3" json:"v,omitempty"`
	DerivePath string `protobuf:"bytes,4,opt,name=derive_path,json=derivePath,proto3" json:"derive_path,omitempty"`
	TxHash     []byte `protobuf:"bytes,5,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
}

func (x *Signature) Reset() {
	*x = Signature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svarog_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Signature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Signature) ProtoMessage() {}

func (x *Signature) ProtoReflect() protoreflect.Message {
	mi := &file_svarog_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Signature.ProtoReflect.Descriptor instead.
func (*Signature) Descriptor() ([]byte, []int) {
	return file_svarog_proto_rawDescGZIP(), []int{5}
}

func (x *Signature) GetR() []byte {
	if x != nil {
		return x.R
	}
	return nil
}

func (x *Signature) GetS() []byte {
	if x != nil {
		return x.S
	}
	return nil
}

func (x *Signature) GetV() uint32 {
	if x != nil {
		return x.V
	}
	return 0
}

func (x *Signature) GetDerivePath() string {
	if x != nil {
		return x.DerivePath
	}
	return ""
}

func (x *Signature) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

type Signatures struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signatures []*Signature `protobuf:"bytes,1,rep,name=signatures,proto3" json:"signatures,omitempty"`
}

func (x *Signatures) Reset() {
	*x = Signatures{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svarog_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Signatures) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Signatures) ProtoMessage() {}

func (x *Signatures) ProtoReflect() protoreflect.Message {
	mi := &file_svarog_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Signatures.ProtoReflect.Descriptor instead.
func (*Signatures) Descriptor() ([]byte, []int) {
	return file_svarog_proto_rawDescGZIP(), []int{6}
}

func (x *Signatures) GetSignatures() []*Signature {
	if x != nil {
		return x.Signatures
	}
	return nil
}

type Void struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Void) Reset() {
	*x = Void{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svarog_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Void) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Void) ProtoMessage() {}

func (x *Void) ProtoReflect() protoreflect.Message {
	mi := &file_svarog_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Void.ProtoReflect.Descriptor instead.
func (*Void) Descriptor() ([]byte, []int) {
	return file_svarog_proto_rawDescGZIP(), []int{7}
}

type TxHash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DerivePath string `protobuf:"bytes,1,opt,name=derive_path,json=derivePath,proto3" json:"derive_path,omitempty"`
	TxHash     []byte `protobuf:"bytes,2,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
}

func (x *TxHash) Reset() {
	*x = TxHash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svarog_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxHash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxHash) ProtoMessage() {}

func (x *TxHash) ProtoReflect() protoreflect.Message {
	mi := &file_svarog_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxHash.ProtoReflect.Descriptor instead.
func (*TxHash) Descriptor() ([]byte, []int) {
	return file_svarog_proto_rawDescGZIP(), []int{8}
}

func (x *TxHash) GetDerivePath() string {
	if x != nil {
		return x.DerivePath
	}
	return ""
}

func (x *TxHash) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

type ToSign struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxHashes []*TxHash `protobuf:"bytes,1,rep,name=tx_hashes,json=txHashes,proto3" json:"tx_hashes,omitempty"`
}

func (x *ToSign) Reset() {
	*x = ToSign{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svarog_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToSign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToSign) ProtoMessage() {}

func (x *ToSign) ProtoReflect() protoreflect.Message {
	mi := &file_svarog_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToSign.ProtoReflect.Descriptor instead.
func (*ToSign) Descriptor() ([]byte, []int) {
	return file_svarog_proto_rawDescGZIP(), []int{9}
}

func (x *ToSign) GetTxHashes() []*TxHash {
	if x != nil {
		return x.TxHashes
	}
	return nil
}

type SessionId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *SessionId) Reset() {
	*x = SessionId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svarog_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionId) ProtoMessage() {}

func (x *SessionId) ProtoReflect() protoreflect.Message {
	mi := &file_svarog_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionId.ProtoReflect.Descriptor instead.
func (*SessionId) Descriptor() ([]byte, []int) {
	return file_svarog_proto_rawDescGZIP(), []int{10}
}

func (x *SessionId) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type Whistle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Message   string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Whistle) Reset() {
	*x = Whistle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svarog_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Whistle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Whistle) ProtoMessage() {}

func (x *Whistle) ProtoReflect() protoreflect.Message {
	mi := &file_svarog_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Whistle.ProtoReflect.Descriptor instead.
func (*Whistle) Descriptor() ([]byte, []int) {
	return file_svarog_proto_rawDescGZIP(), []int{11}
}

func (x *Whistle) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *Whistle) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId   string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Purpose     string `protobuf:"bytes,2,opt,name=purpose,proto3" json:"purpose,omitempty"` // formerly "round"
	MemberIdSrc uint64 `protobuf:"varint,3,opt,name=member_id_src,json=memberIdSrc,proto3" json:"member_id_src,omitempty"`
	MemberIdDst uint64 `protobuf:"varint,4,opt,name=member_id_dst,json=memberIdDst,proto3" json:"member_id_dst,omitempty"`
	Body        []byte `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"` // if set to [], remaining fields are used as index.
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svarog_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_svarog_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_svarog_proto_rawDescGZIP(), []int{12}
}

func (x *Message) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *Message) GetPurpose() string {
	if x != nil {
		return x.Purpose
	}
	return ""
}

func (x *Message) GetMemberIdSrc() uint64 {
	if x != nil {
		return x.MemberIdSrc
	}
	return 0
}

func (x *Message) GetMemberIdDst() uint64 {
	if x != nil {
		return x.MemberIdDst
	}
	return 0
}

func (x *Message) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

type SessionFruit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//
	//	*SessionFruit_RootXpub
	//	*SessionFruit_Signatures
	Value isSessionFruit_Value `protobuf_oneof:"value"`
}

func (x *SessionFruit) Reset() {
	*x = SessionFruit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svarog_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionFruit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionFruit) ProtoMessage() {}

func (x *SessionFruit) ProtoReflect() protoreflect.Message {
	mi := &file_svarog_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionFruit.ProtoReflect.Descriptor instead.
func (*SessionFruit) Descriptor() ([]byte, []int) {
	return file_svarog_proto_rawDescGZIP(), []int{13}
}

func (m *SessionFruit) GetValue() isSessionFruit_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *SessionFruit) GetRootXpub() string {
	if x, ok := x.GetValue().(*SessionFruit_RootXpub); ok {
		return x.RootXpub
	}
	return ""
}

func (x *SessionFruit) GetSignatures() *Signatures {
	if x, ok := x.GetValue().(*SessionFruit_Signatures); ok {
		return x.Signatures
	}
	return nil
}

type isSessionFruit_Value interface {
	isSessionFruit_Value()
}

type SessionFruit_RootXpub struct {
	RootXpub string `protobuf:"bytes,1,opt,name=root_xpub,json=rootXpub,proto3,oneof"` // keygen or reshare result
}

type SessionFruit_Signatures struct {
	Signatures *Signatures `protobuf:"bytes,2,opt,name=signatures,proto3,oneof"` // sign result
}

func (*SessionFruit_RootXpub) isSessionFruit_Value() {}

func (*SessionFruit_Signatures) isSessionFruit_Value() {}

type BizCallbackUrl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Heartbeat string `protobuf:"bytes,1,opt,name=heartbeat,proto3" json:"heartbeat,omitempty"`
}

func (x *BizCallbackUrl) Reset() {
	*x = BizCallbackUrl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svarog_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BizCallbackUrl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BizCallbackUrl) ProtoMessage() {}

func (x *BizCallbackUrl) ProtoReflect() protoreflect.Message {
	mi := &file_svarog_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BizCallbackUrl.ProtoReflect.Descriptor instead.
func (*BizCallbackUrl) Descriptor() ([]byte, []int) {
	return file_svarog_proto_rawDescGZIP(), []int{14}
}

func (x *BizCallbackUrl) GetHeartbeat() string {
	if x != nil {
		return x.Heartbeat
	}
	return ""
}

var File_svarog_proto protoreflect.FileDescriptor

var file_svarog_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x76, 0x61, 0x72, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x73, 0x76, 0x61, 0x72, 0x6f, 0x67, 0x22, 0xd0, 0x02, 0x0a, 0x0d, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x65,
	0x79, 0x5f, 0x71, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x6b, 0x65, 0x79, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x71, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x72, 0x65, 0x73, 0x68, 0x61, 0x72, 0x65, 0x4b, 0x65,
	0x79, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x12, 0x25, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x76, 0x61, 0x72, 0x6f, 0x67,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x30,
	0x0a, 0x14, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x5f,
	0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x12, 0x2e, 0x0a, 0x13, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72,
	0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x41, 0x66, 0x74, 0x65, 0x72, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x12, 0x27, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x76, 0x61, 0x72, 0x6f, 0x67, 0x2e, 0x54, 0x6f, 0x53, 0x69, 0x67,
	0x6e, 0x52, 0x06, 0x74, 0x6f, 0x53, 0x69, 0x67, 0x6e, 0x22, 0xa3, 0x01, 0x0a, 0x12, 0x4a, 0x6f,
	0x69, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x73, 0x22,
	0x58, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x75,
	0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xad, 0x01, 0x0a, 0x05, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x71, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x52, 0x65, 0x73, 0x68, 0x61, 0x72, 0x65, 0x12,
	0x28, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x73, 0x76, 0x61, 0x72, 0x6f, 0x67, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x69, 0x0a, 0x06, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x41, 0x74, 0x74, 0x65, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x22, 0x6f, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x12, 0x0c, 0x0a, 0x01, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x72, 0x12,
	0x0c, 0x0a, 0x01, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x73, 0x12, 0x0c, 0x0a,
	0x01, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x76, 0x12, 0x1f, 0x0a, 0x0b, 0x64,
	0x65, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x64, 0x65, 0x72, 0x69, 0x76, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x17, 0x0a, 0x07,
	0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x74,
	0x78, 0x48, 0x61, 0x73, 0x68, 0x22, 0x3f, 0x0a, 0x0a, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x76, 0x61, 0x72, 0x6f, 0x67,
	0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x22, 0x06, 0x0a, 0x04, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x42,
	0x0a, 0x06, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x72, 0x69,
	0x76, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x65, 0x72, 0x69, 0x76, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61,
	0x73, 0x68, 0x22, 0x35, 0x0a, 0x06, 0x54, 0x6f, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x2b, 0x0a, 0x09,
	0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x73, 0x76, 0x61, 0x72, 0x6f, 0x67, 0x2e, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x52,
	0x08, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x22, 0x2a, 0x0a, 0x09, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x07, 0x57, 0x68, 0x69, 0x73, 0x74, 0x6c, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x9e, 0x01, 0x0a, 0x07, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x22,
	0x0a, 0x0d, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x73, 0x72, 0x63, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x53,
	0x72, 0x63, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f,
	0x64, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x64, 0x44, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x6c, 0x0a, 0x0c, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x75, 0x69, 0x74, 0x12, 0x1d, 0x0a, 0x09, 0x72, 0x6f,
	0x6f, 0x74, 0x5f, 0x78, 0x70, 0x75, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x08, 0x72, 0x6f, 0x6f, 0x74, 0x58, 0x70, 0x75, 0x62, 0x12, 0x34, 0x0a, 0x0a, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x73, 0x76, 0x61, 0x72, 0x6f, 0x67, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x73, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x42,
	0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2e, 0x0a, 0x0e, 0x42, 0x69, 0x7a, 0x43,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x65,
	0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68,
	0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x32, 0xba, 0x01, 0x0a, 0x07, 0x4d, 0x70, 0x63,
	0x50, 0x65, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x0b, 0x4a, 0x6f, 0x69, 0x6e, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x2e, 0x73, 0x76, 0x61, 0x72, 0x6f, 0x67, 0x2e, 0x4a, 0x6f, 0x69,
	0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0c, 0x2e, 0x73, 0x76, 0x61, 0x72, 0x6f, 0x67, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x12, 0x47, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x75, 0x69, 0x74,
	0x12, 0x1e, 0x2e, 0x73, 0x76, 0x61, 0x72, 0x6f, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x46, 0x72, 0x75, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x73, 0x76, 0x61, 0x72, 0x6f, 0x67, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x46, 0x72, 0x75, 0x69, 0x74, 0x12, 0x2d, 0x0a, 0x0c, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0f, 0x2e, 0x73, 0x76, 0x61, 0x72, 0x6f, 0x67, 0x2e,
	0x57, 0x68, 0x69, 0x73, 0x74, 0x6c, 0x65, 0x1a, 0x0c, 0x2e, 0x73, 0x76, 0x61, 0x72, 0x6f, 0x67,
	0x2e, 0x56, 0x6f, 0x69, 0x64, 0x32, 0xce, 0x02, 0x0a, 0x11, 0x4d, 0x70, 0x63, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x0a, 0x4e,
	0x65, 0x77, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x2e, 0x73, 0x76, 0x61, 0x72,
	0x6f, 0x67, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x1a, 0x15, 0x2e, 0x73, 0x76, 0x61, 0x72, 0x6f, 0x67, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3c, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x11, 0x2e, 0x73, 0x76,
	0x61, 0x72, 0x6f, 0x67, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x1a, 0x15,
	0x2e, 0x73, 0x76, 0x61, 0x72, 0x6f, 0x67, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2c, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x77, 0x57, 0x68, 0x69,
	0x73, 0x74, 0x6c, 0x65, 0x12, 0x0f, 0x2e, 0x73, 0x76, 0x61, 0x72, 0x6f, 0x67, 0x2e, 0x57, 0x68,
	0x69, 0x73, 0x74, 0x6c, 0x65, 0x1a, 0x0c, 0x2e, 0x73, 0x76, 0x61, 0x72, 0x6f, 0x67, 0x2e, 0x56,
	0x6f, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x0b, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x0f, 0x2e, 0x73, 0x76, 0x61, 0x72, 0x6f, 0x67, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x1a, 0x0c, 0x2e, 0x73, 0x76, 0x61, 0x72, 0x6f, 0x67, 0x2e, 0x56, 0x6f, 0x69,
	0x64, 0x12, 0x2e, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x0f, 0x2e, 0x73, 0x76, 0x61, 0x72, 0x6f, 0x67, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x1a, 0x0f, 0x2e, 0x73, 0x76, 0x61, 0x72, 0x6f, 0x67, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x33, 0x0a, 0x10, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x11, 0x2e, 0x73, 0x76, 0x61, 0x72, 0x6f, 0x67, 0x2e, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x1a, 0x0c, 0x2e, 0x73, 0x76, 0x61, 0x72, 0x6f,
	0x67, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x42, 0x0b, 0x5a, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x67, 0x65, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_svarog_proto_rawDescOnce sync.Once
	file_svarog_proto_rawDescData = file_svarog_proto_rawDesc
)

func file_svarog_proto_rawDescGZIP() []byte {
	file_svarog_proto_rawDescOnce.Do(func() {
		file_svarog_proto_rawDescData = protoimpl.X.CompressGZIP(file_svarog_proto_rawDescData)
	})
	return file_svarog_proto_rawDescData
}

var file_svarog_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_svarog_proto_goTypes = []interface{}{
	(*SessionConfig)(nil),          // 0: svarog.SessionConfig
	(*JoinSessionRequest)(nil),     // 1: svarog.JoinSessionRequest
	(*GetSessionFruitRequest)(nil), // 2: svarog.GetSessionFruitRequest
	(*Group)(nil),                  // 3: svarog.Group
	(*Member)(nil),                 // 4: svarog.Member
	(*Signature)(nil),              // 5: svarog.Signature
	(*Signatures)(nil),             // 6: svarog.Signatures
	(*Void)(nil),                   // 7: svarog.Void
	(*TxHash)(nil),                 // 8: svarog.TxHash
	(*ToSign)(nil),                 // 9: svarog.ToSign
	(*SessionId)(nil),              // 10: svarog.SessionId
	(*Whistle)(nil),                // 11: svarog.Whistle
	(*Message)(nil),                // 12: svarog.Message
	(*SessionFruit)(nil),           // 13: svarog.SessionFruit
	(*BizCallbackUrl)(nil),         // 14: svarog.BizCallbackUrl
}
var file_svarog_proto_depIdxs = []int32{
	3,  // 0: svarog.SessionConfig.groups:type_name -> svarog.Group
	9,  // 1: svarog.SessionConfig.to_sign:type_name -> svarog.ToSign
	4,  // 2: svarog.Group.members:type_name -> svarog.Member
	5,  // 3: svarog.Signatures.signatures:type_name -> svarog.Signature
	8,  // 4: svarog.ToSign.tx_hashes:type_name -> svarog.TxHash
	6,  // 5: svarog.SessionFruit.signatures:type_name -> svarog.Signatures
	1,  // 6: svarog.MpcPeer.JoinSession:input_type -> svarog.JoinSessionRequest
	2,  // 7: svarog.MpcPeer.GetSessionFruit:input_type -> svarog.GetSessionFruitRequest
	11, // 8: svarog.MpcPeer.AbortSession:input_type -> svarog.Whistle
	0,  // 9: svarog.MpcSessionManager.NewSession:input_type -> svarog.SessionConfig
	10, // 10: svarog.MpcSessionManager.GetSessionConfig:input_type -> svarog.SessionId
	11, // 11: svarog.MpcSessionManager.BlowWhistle:input_type -> svarog.Whistle
	12, // 12: svarog.MpcSessionManager.PostMessage:input_type -> svarog.Message
	12, // 13: svarog.MpcSessionManager.GetMessage:input_type -> svarog.Message
	10, // 14: svarog.MpcSessionManager.TerminateSession:input_type -> svarog.SessionId
	7,  // 15: svarog.MpcPeer.JoinSession:output_type -> svarog.Void
	13, // 16: svarog.MpcPeer.GetSessionFruit:output_type -> svarog.SessionFruit
	7,  // 17: svarog.MpcPeer.AbortSession:output_type -> svarog.Void
	0,  // 18: svarog.MpcSessionManager.NewSession:output_type -> svarog.SessionConfig
	0,  // 19: svarog.MpcSessionManager.GetSessionConfig:output_type -> svarog.SessionConfig
	7,  // 20: svarog.MpcSessionManager.BlowWhistle:output_type -> svarog.Void
	7,  // 21: svarog.MpcSessionManager.PostMessage:output_type -> svarog.Void
	12, // 22: svarog.MpcSessionManager.GetMessage:output_type -> svarog.Message
	7,  // 23: svarog.MpcSessionManager.TerminateSession:output_type -> svarog.Void
	15, // [15:24] is the sub-list for method output_type
	6,  // [6:15] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_svarog_proto_init() }
func file_svarog_proto_init() {
	if File_svarog_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_svarog_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svarog_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svarog_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSessionFruitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svarog_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svarog_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Member); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svarog_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Signature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svarog_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Signatures); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svarog_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Void); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svarog_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxHash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svarog_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToSign); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svarog_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svarog_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Whistle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svarog_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svarog_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionFruit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svarog_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BizCallbackUrl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_svarog_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*SessionFruit_RootXpub)(nil),
		(*SessionFruit_Signatures)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_svarog_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_svarog_proto_goTypes,
		DependencyIndexes: file_svarog_proto_depIdxs,
		MessageInfos:      file_svarog_proto_msgTypes,
	}.Build()
	File_svarog_proto = out.File
	file_svarog_proto_rawDesc = nil
	file_svarog_proto_goTypes = nil
	file_svarog_proto_depIdxs = nil
}
